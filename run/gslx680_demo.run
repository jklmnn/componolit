#
# Build
#

assert_spec acpi

if {[have_spec odroid_xu]} {
	puts "Run script does not support this platform."
	exit 0
}

set build_components {
	core init
	drivers/timer
	drivers/input
        drivers/framebuffer
        app/pointer
	server/report_rom server/rom_filter server/dynamic_rom
	server/nit_fb
	server/nitpicker
	server/report_rom
	server/terminal
	server/terminal_log
	test/input
}

proc gpio_drv { } { if {[have_spec rpi] && [have_spec hw]}  { return hw_gpio_drv }
                    if {[have_spec rpi] && [have_spec foc]} { return foc_gpio_drv }
                    return gpio_drv }

source ${genode_dir}/repos/base/run/platform_drv.inc

proc platform_drv_policy {} {
    return {
        <policy label_prefix="silead_ts"> <device name="GSLX680"/> </policy>
	<policy label_prefix="acpica"> <pci class="ALL"/> </policy>
    }
}

proc platform_drv_add_routing {} {
	return {
			<service name="ROM" label="system"> <child name="dynamic_rom"/> </service>
			<service name="ROM" label="acpi_ready"> <child name="acpi_state"/> </service>}
}

proc platform_drv_config_config {} {
	return {
		<config acpi="yes" system="yes">}
}

lappend_if [need_usb_hid]   build_components drivers/usb
lappend_if [have_spec gpio] build_components drivers/gpio

append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

append config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>}

append_platform_drv_config

append config {
    <start name="fb_boot_drv">
        <resource name="RAM" quantum="3M"/>
        <provides>
            <service name="Framebuffer"/>
        </provides>
    </start>
}

append config {
    <start name="dummy_input_drv">
        <resource name="RAM" quantum="1M"/>
        <provides>
            <service name="Input"/>
        </provides>
    </start>
}

append config {
    <start name="silead_ts" caps="10000">
        <resource name="RAM" quantum="4M"/>
        <config>
            <firmware name="trekstor_surftab7new_silead_ts.fw"/>
        </config>
        <route>
            <service name="LOG"><child name="terminal_log"/></service>
            <any-service> <parent/> <any-child/> </any-service>
        </route>
    </start>
    <start name="acpi_state">
        <binary name="report_rom"/>
        <resource name="RAM" quantum="2M"/>
        <provides>
            <service name="ROM"/>
            <service name="Report"/>
        </provides>
        <config verbose="yes">
            <policy label="platform_drv -> acpi_ready" report="acpica -> acpi_ready"/>
        </config>
        <route>
            <any-service> <parent/> </any-service>
        </route>
    </start>
}

append config {
		<start name="dynamic_rom">
			<resource name="RAM" quantum="4M"/>
			<provides><service name="ROM"/></provides>
			<config verbose="yes">
				<rom name="system">
					<inline description="set system state to 'normal'">
						<system state="normal"/>
					</inline>
			<!--		<sleep milliseconds="5000" />
					<inline description="set system state to 'reset'">
						<system state="reset"/>
					</inline>
                        -->
                                        <sleep milliseconds="30000" />
					<inline description="set system state to 'poweroff'">
						<system state="poweroff"/>
					</inline>
					<sleep milliseconds="1000" />
				</rom>
			</config>
		</start>
}

append config {
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	
	<start name="report_rom">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
	</start>

	<start name="nitpicker">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Nitpicker"/></provides>
		<config>
			<domain name="pointer" layer="1" origin="pointer" content="client" label="no"/>
			<domain name="default" layer="2" content="client" label="no" focus="click" hover="always" />
			<policy label_prefix="pointer" domain="pointer"/>
			<default-policy domain="default"/>
		</config>
		<route>
			<service name="Input"> <child name="dummy_input_drv" /> </service>
			<service name="Framebuffer"> <child name="fb_boot_drv" /> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="pointer">
		<resource name="RAM" quantum="1M"/>
	</start>

	<start name="terminal_fb">
		<binary name="nit_fb"/>
		<resource name="RAM" quantum="16M"/>
		<provides>
			<service name="Framebuffer"/>
			<service name="Input"/>
		</provides>
		<config xpos="100" ypos="100" width="3000" height="1600" refresh_rate="25"/>
	</start>

	<start name="terminal">
		<resource name="RAM" quantum="3M"/>
		<provides><service name="Terminal"/></provides>
		<config>
			<!-- supported built-in font sizes are 8, 12, 16, 24 and 36 -->
			<font size="36" />
		</config>
		<route>
			<service name="Input"> <child name="terminal_fb"/> </service>
			<service name="Framebuffer"> <child name="terminal_fb"/> </service>
			<any-service> <parent/> <any-child/></any-service>
		</route>
	</start>

	<start name="terminal_log">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="LOG"/></provides>
	</start>

</config>}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core ld.lib.so init
	timer
        report_rom rom_filter dynamic_rom
        silead_ts
        fb_boot_drv
        dummy_input_drv
	nit_fb
	nitlog
	nitpicker
	pointer
	report_rom
	terminal
	terminal_log
	test-input
}

#firmware

append boot_modules {
    trekstor_surftab7new_silead_ts.fw
}



append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args " -m 256 "

run_genode_until forever
